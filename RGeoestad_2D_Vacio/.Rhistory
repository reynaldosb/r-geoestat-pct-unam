png("Results/AnalisisEstructural/Pluv_mm_Log_Trend_X_Y.png", bg = "white")
GDirecciones(XCoord, YCoord, Pluv_mm_Log)
dev.off()
# Estimation of the experimental variogram
N_lags<-10
DistMin<-min(dist(Data_File[,1:2])) # Minimum distance in data
DistMax<-max(dist(Data_File[,1:2])) # Maximum distance in data
lag_value<-max((DistMax/2)/N_lags, DistMin)
png("Results/AnalisisEstructural/Pluv_mm_Log_VarioEstimation.png", bg = "white")
Pluv_mm_Log_VarioEstimation<-Variograma(XCoord, YCoord,
Pluv_mm_Log, 0, 90, 1*N_lags, lag_value, 1, "Variograma Adireccional de Pluv_mm_Log")
dev.off()
# Displaying the variogram estimated values
Pluv_mm_Log_VarioEstimation
# Polynomial Trend Surface Estimation (degree = 1)
pol_degree=1
Pluv_mm_Log_Detrended_1<-Trend(XCoord, YCoord,
Pluv_mm_Log, pol_degree)
# Median Regression Analysis in X and Y directions for residuals Pluv_mm_Log_Detrended_1
png("Results/AnalisisEstructural/Pluv_mm_Log_Detrended_1.png", bg = "white")
GDirecciones(Pluv_mm_Log_Detrended_1[,1], Pluv_mm_Log_Detrended_1[,2], Pluv_mm_Log_Detrended_1[,3])
dev.off()
# Estimation of the experimental variogram (Detrended_1)
png("Results/AnalisisEstructural/Pluv_mm_Log_Detrended_1_VarioEstimation.png", bg = "white")
Pluv_mm_Log_Detrended_1_VarioEstimation<-Variograma(Pluv_mm_Log_Detrended_1[,1], Pluv_mm_Log_Detrended_1[,2],
Pluv_mm_Log_Detrended_1[,3], 0, 90, N_lags, lag_value, 1,
"Variograma Adireccional de Pluv_mm_Log Residuos 1")
dev.off()
# Polynomial Trend Surface Estimation (degree = 2)
pol_degree=2
Pluv_mm_Log_Detrended_2<-Trend(XCoord, YCoord,
Pluv_mm_Log, pol_degree)
# Median Regression Analysis in X and Y directions for residuals Pluv_mm_Log_Detrended_1
png("Results/AnalisisEstructural/Pluv_mm_Log_Detrended_2.png", bg = "white")
GDirecciones(Pluv_mm_Log_Detrended_2[,1], Pluv_mm_Log_Detrended_2[,2], Pluv_mm_Log_Detrended_2[,3])
dev.off()
# Estimation of the experimental variogram (Detrended_2)
png("Results/AnalisisEstructural/Pluv_mm_Log_Detrended_2_VarioEstimation.png", bg = "white")
Pluv_mm_Log_Detrended_2_VarioEstimation<-Variograma(Pluv_mm_Log_Detrended_2[,1], Pluv_mm_Log_Detrended_2[,2],
Pluv_mm_Log_Detrended_2[,3], 0, 90, N_lags, lag_value, 1,
"Variograma Adireccional de Pluv_mm_Log Residuos 2")
dev.off()
#--------------------------------------------------------------#
#       Univariate Variography (Structural)  Modeling          #
#--------------------------------------------------------------#
# Estimation of the experimental variogram
# Just showing because is already save above
Pluv_mm_Log_VarioEstimation<-Variograma(XCoord, YCoord,
Pluv_mm_Log, 0, 90, N_lags, lag_value, 1, "Variograma Adireccional de Pluv_mm_Log_Log")
# Displaying the variogram estimated values
Pluv_mm_Log_VarioEstimation
# Directional Variograms in 4 directions (0, 45, 90 and 135)
png("Results/AnalisisEstructural/Pluv_mm_Log_Vario4DEstimation.png", bg = "white")
Pluv_mm_Log_VarioEstimation4D<-Variograma4D(XCoord, YCoord,
Pluv_mm_Log, 0, 45, 90, 135, 22.5, N_lags, lag_value, 1, "Variogramas Direccionales de Pluv_mm_Log")
dev.off()
# Displaying the four directional estimated variogram values
Pluv_mm_Log_VarioEstimation4D
# Automatic Variogram Model Fitting
png("Results/AnalisisEstructural/Pluv_mm_Log_VarioAllModelEstimation.png", bg = "white")
Pluv_mm_Log_AllModelVarioFit<-AllModel(XCoord, YCoord,
Pluv_mm_Log, 0, 90, N_lags, lag_value, 1, "Ajustes del Variograma Adireccional de Pluv_mm_Log")
dev.off()
# Displaying Automatic Variogram Model Fitting
Pluv_mm_Log_AllModelVarioFit
# Best Automatic Variogram Model Fitting
#VariogramBestModel<-BestModel(Data[,1], Data[,2], Data[,3], 0, 90, 10, 150, 1, 'Elevation_of_seam Variogram')
png("Results/AnalisisEstructural/Pluv_mm_Log_VarioBestModelEstimation.png", bg = "white")
Pluv_mm_Log_BestModelVarioFit<-BestModel(XCoord, YCoord,
Pluv_mm_Log, 0, 90, N_lags, lag_value, 1, "Mejor Ajuste del Variograma Adireccional de Pluv_mm_Log")
dev.off()
# Displaying Best Automatic Variogram Model Fitting
Pluv_mm_Log_BestModelVarioFit
# Manual Variogram Model Fitting
#modelos de variograma (1- exponential, 2- spherical, 3- gaussian)
vario_model<- 2 # 2
nugget<- 0.08 # 0.08
sill_and_nugget<- 1.1 # 1.1
rank <- 15000 # 15000
png("Results/AnalisisEstructural/Pluv_mm_Log_VarioEyeEstimation.png", bg = "white")
Pluv_mm_Log_EyeModelVarioFit<-EyeModel(XCoord, YCoord,
Pluv_mm_Log, 0, 90, N_lags, lag_value, 1,
vario_model, nugget, sill_and_nugget, rank, "Ajuste Manual del Variograma Adireccional de Pluv_mm_Log")
dev.off()
# Variogram Model Cross Validation
library(gstat)
Pluv_mm_Log_CrossValid<- CrossValidation(XCoord, YCoord,
Pluv_mm_Log, vario_model, nugget, sill_and_nugget, rank)
# Displaying
Pluv_mm_Log_CrossValid
## Statistical Analysis of differences (Z-Z*)
# Basic Statistics in a single table
Pluv_mm_Log_CrossValid_Sta<- Val_Estadisticos(Pluv_mm_Log_CrossValid[,c(3,4,5)])
# Histogram and Boxplot 1
png("Results/AnalisisEstructural/Pluv_mm_Log-Pluv_mm_Log+_HistBoxPlot1.png", bg = "white")
HistBoxplot(x=Pluv_mm_Log_CrossValid[,5], mean = Pluv_mm_Log_CrossValid_Sta[5,3], median = Pluv_mm_Log_CrossValid_Sta[4,3], main ="",
xlab = "Pluv_mm_Log-Pluv_mm_Log* (ppm)", ylab = "Frecuencia Absoluta (conteo)", AbsFreq = TRUE, PercentFreq = FALSE )
dev.off()
# Spatial Distribution of differences (Z-Z*)
png("Results/AnalisisEstructural/Pluv_mm_Log_CrossValid_Spatial_Distr.png", bg = "white")
DEspacial(Pluv_mm_Log_CrossValid[,1], Pluv_mm_Log_CrossValid[,2], Pluv_mm_Log_CrossValid[,5],
'X (Km)', 'Y (Km)', 'Pluv_mm_Log-Pluv_mm_Log* (ppm)', 'Pluv_mm_Log - Pluv_mm_Log*')
dev.off()
# Scatterplot with linear correlation coefficient
# Pluv_mm_Log is the independent variable
X<-Pluv_mm_Log_CrossValid[,3] # the same as Pluv_mm_Log
# Pluv_mm_Log* is the dependent variable
Y<-Pluv_mm_Log_CrossValid[,4]
# Basic Statistics of the estimation (Pluv_mm_Log*)
Pluv_mm_Log_CrossValid_Stat <- Estadisticas(Pluv_mm_Log_CrossValid[,4])
png("Results/AnalisisEstructural/Pluv_mm_Log-Pluv_mm_Log+_ScatterPlot.png", bg = "white")
ScatterPlot(Pluv_mm_Log, Pluv_mm_Log_CrossValid[,4], 9,
Xmin = Pluv_mm_Log_Stat[2,2], Xmax = Pluv_mm_Log_Stat[7,2],
Ymin = Pluv_mm_Log_CrossValid_Stat[2,2],Ymax = Pluv_mm_Log_CrossValid_Stat[7,2],
XLAB = "Pluv_mm_Log (ppm)", YLAB = "Pluv_mm_Log* (ppm)")
dev.off()
#--------------------------------------------------------------#
#                    Spatial Distribution                      #
#--------------------------------------------------------------#
dir.create(paste(getwd(),"/Results/AnalisisEstructuralRadar", sep=""))
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_Spatial_Distr.png", bg = "white")
DEspacial(XCoord, YCoord, Radar_mm_Log,
'X (Km)', 'Y (Km)', 'Radar_mm_Log (ppm)', 'Radar_mm_Log Spatial Distribution')
dev.off()
#--------------------------------------------------------------#
#               Trend (Stationarity) Analysis                  #
#--------------------------------------------------------------#
# Median Regression Analysis in X and Y directions for variable Radar_mm_Log
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_Trend_X_Y.png", bg = "white")
GDirecciones(XCoord, YCoord, Radar_mm_Log)
dev.off()
# Estimation of the experimental variogram
X_rng<-XCoord_Stat[8,2]
Y_rng<-YCoord_Stat[8,2]
N_lags<-14
lag_value <- sqrt(X_rng*X_rng+Y_rng*Y_rng)/(2*N_lags)
DistMin<-min(dist(Data_File[,1:2])) # Minimum distance in data
DistMax<-max(dist(Data_File[,1:2])) # Minimum distance in data
lag_value<-max((DistMax/2)/N_lags, DistMin)
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_VarioEstimation.png", bg = "white")
Radar_mm_Log_VarioEstimation<-Variograma(XCoord, YCoord,
Radar_mm_Log, 0, 90, N_lags, lag_value, 1, "Variograma Adireccional de Radar_mm_Log")
dev.off()
# Displaying the variogram estimated values
Radar_mm_Log_VarioEstimation
# Polynomial Trend Surface Estimation (degree = 1)
pol_degree=1
Radar_mm_Log_Detrended_1<-Trend(XCoord, YCoord,
Radar_mm_Log, pol_degree)
# Median Regression Analysis in X and Y directions for residuals Radar_mm_Log_Detrended_1
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_Detrended_1.png", bg = "white")
GDirecciones(Radar_mm_Log_Detrended_1[,1], Radar_mm_Log_Detrended_1[,2], Radar_mm_Log_Detrended_1[,3])
dev.off()
# Estimation of the experimental variogram (Detrended_1)
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_Detrended_1_VarioEstimation.png", bg = "white")
Radar_mm_Log_Detrended_1_VarioEstimation<-Variograma(Radar_mm_Log_Detrended_1[,1], Radar_mm_Log_Detrended_1[,2],
Radar_mm_Log_Detrended_1[,3], 0, 90, N_lags, lag_value, 1,
"Variograma Adireccional de Radar_mm_Log Residuos 1")
dev.off()
# Polynomial Trend Surface Estimation (degree = 2)
pol_degree=2
Radar_mm_Log_Detrended_2<-Trend(XCoord, YCoord,
Radar_mm_Log, pol_degree)
# Median Regression Analysis in X and Y directions for residuals Radar_mm_Log_Detrended_1
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_Detrended_2.png", bg = "white")
GDirecciones(Radar_mm_Log_Detrended_2[,1], Radar_mm_Log_Detrended_2[,2], Radar_mm_Log_Detrended_2[,3])
dev.off()
# Estimation of the experimental variogram (Detrended_2)
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_Detrended_2_VarioEstimation.png", bg = "white")
Radar_mm_Log_Detrended_2_VarioEstimation<-Variograma(Radar_mm_Log_Detrended_2[,1], Radar_mm_Log_Detrended_2[,2],
Radar_mm_Log_Detrended_2[,3], 0, 90, N_lags, lag_value, 1,
"Variograma Adireccional de Radar_mm_Log Residuos 2")
dev.off()
#--------------------------------------------------------------#
#       Univariate Variography (Structural)  Modeling          #
#--------------------------------------------------------------#
# Estimation of the experimental variogram
# Just showing because is already save above
Radar_mm_Log_VarioEstimation<-Variograma(XCoord, YCoord,
Radar_mm_Log, 135, 22.5, N_lags, lag_value, 1, "Variograma Adireccional de Radar_mm_Log_Log")
# Displaying the variogram estimated values
Radar_mm_Log_VarioEstimation
# Directional Variograms in 4 directions (0, 45, 90 and 135)
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_Vario4DEstimation.png", bg = "white")
Radar_mm_Log_VarioEstimation4D<-Variograma4D(XCoord, YCoord,
Radar_mm_Log, 0, 45, 90, 135, 22.5, N_lags, lag_value, 1, "Variogramas Direccionales de Radar_mm_Log")
dev.off()
# Displaying the four directional estimated variogram values
Radar_mm_Log_VarioEstimation4D
# Automatic Variogram Model Fitting
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_VarioAllModelEstimation.png", bg = "white")
Radar_mm_Log_AllModelVarioFit<-AllModel(XCoord, YCoord,
Radar_mm_Log, 0, 90, N_lags, lag_value, 1, "Ajustes del Variograma Adireccional de Radar_mm_Log")
dev.off()
# Displaying Automatic Variogram Model Fitting
Radar_mm_Log_AllModelVarioFit
# Best Automatic Variogram Model Fitting
#VariogramBestModel<-BestModel(Data[,1], Data[,2], Data[,3], 0, 90, 10, 150, 1, 'Elevation_of_seam Variogram')
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_VarioBestModelEstimation.png", bg = "white")
Radar_mm_Log_BestModelVarioFit<-BestModel(XCoord, YCoord,
Radar_mm_Log, 0, 90, N_lags, lag_value, 1, "Mejor Ajuste del Variograma Adireccional de Radar_mm_Log")
dev.off()
# Displaying Best Automatic Variogram Model Fitting
Radar_mm_Log_BestModelVarioFit
# Manual Variogram Model Fitting
#modelos de variograma (1- exponential, 2- spherical, 3- gaussian)
vario_model<- 1
nugget<- .17
sill_and_nugget<- 1.25
rank <- 20000
Radar_mm_Log_vario_model<- 1
Radar_mm_Log_nugget<- 0.17
Radar_mm_Log_sill_and_nugget<- 1.25
Radar_mm_Log_rank <- 20000
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_VarioEyeEstimation.png", bg = "white")
Radar_mm_Log_EyeModelVarioFit<-EyeModel(XCoord, YCoord,
Radar_mm_Log, 0, 90, N_lags, lag_value, 1,
Radar_mm_Log_vario_model, Radar_mm_Log_nugget, Radar_mm_Log_sill_and_nugget, Radar_mm_Log_rank,
"Ajuste Manual del Variograma Adireccional de Radar_mm_Log")
dev.off()
# Variogram Model Cross Validation
library(gstat)
library(geoR)
Radar_mm_Log_CrossValid<- CrossValidation(XCoord, YCoord,
Radar_mm_Log, vario_model, nugget, sill_and_nugget, rank)
# Statistical Analysis of differences (Z-Z*)
# Basic Statistics in a single table
Radar_mm_Log_CrossValid_Sta <- Val_Estadisticos(Radar_mm_Log_CrossValid[1:102,c(3,4,5)])
# Histogram and Boxplot 1
png("Results/AnalisisEstructuralRadar/Radar_mm_Log-Radar_mm_Log+_HistBoxPlot1.png", bg = "white")
HistBoxplot(x=Radar_mm_Log_CrossValid[,5], mean = Radar_mm_Log_CrossValid_Sta[5,3], median = Radar_mm_Log_CrossValid_Sta[4,3], main ="",
xlab = "Radar_mm_Log-Radar_mm_Log* (ppm)", ylab = "Frecuencia Absoluta (conteo)", AbsFreq = TRUE, PercentFreq = FALSE )
dev.off()
# Spatial Distribution of differences (Z-Z*)
png("Results/AnalisisEstructuralRadar/Radar_mm_Log_CrossValid_Spatial_Distr.png", bg = "white")
DEspacial(Radar_mm_Log_CrossValid[,1], Radar_mm_Log_CrossValid[,2], Radar_mm_Log_CrossValid[,5],
'X (Km)', 'Y (Km)', 'Radar_mm_Log-Radar_mm_Log* (ppm)', 'Radar_mm_Log - Radar_mm_Log*')
dev.off()
pos1 <- which(Radar_mm_Log_CrossValid[,5] > 1.3)
pos0 <- which(Radar_mm_Log_CrossValid[,5] < -2)
# Scatterplot with linear correlation coefficient
# Radar_mm_Log is the independent variable
X<-Radar_mm_Log_CrossValid[,3]
# Radar_mm_Log* is the dependent variable
Y<-Radar_mm_Log_CrossValid[,4]
png("Results/AnalisisEstructuralRadar/Radar_mm_Log-Radar_mm_Log+_ScatterPlot.png", bg = "white")
scaterplotReg(Radar_mm_Log_CrossValid[,3] , Radar_mm_Log_CrossValid[,4], 9,
Xmin = Radar_mm_Log_CrossValid_Sta[2,1], Xmax = Radar_mm_Log_CrossValid_Sta[7,1],
Ymin = Radar_mm_Log_CrossValid_Sta[2,2],Ymax = Radar_mm_Log_CrossValid_Sta[7,2],
XLAB = "Radar_mm_Log (ppm)", YLAB = "Radar_mm_Log* (ppm)")
dev.off()
scaterplotReg(Radar_mm_Log_CrossValid[,3] , Radar_mm_Log_CrossValid[,5], 9,
Xmin = Radar_mm_Log_CrossValid_Sta[2,1], Xmax = Radar_mm_Log_CrossValid_Sta[7,1],
Ymin = Radar_mm_Log_CrossValid_Sta[2,2],Ymax = Radar_mm_Log_CrossValid_Sta[7,2],
XLAB = "Radar_mm_Log (ppm)", YLAB = "Radar_mm_Log* (ppm)")
#--------------------------------------------------------------#
#                 Univariate Spatial Estimation                #
#--------------------------------------------------------------#
dir.create(paste(getwd(),"/Results/EstimacionEspacial", sep=""))
library(gstat)
library(geoR)
######## Radar_mm_Log
#modelos de variograma (1- exponential, 2- spherical, 3- gaussian)
Radar_mm_Log_vario_model<- 1
Radar_mm_Log_nugget<- 0.17
Radar_mm_Log_sill_and_nugget<- 1.25
Radar_mm_Log_rank <- 20000
minPoints<-4
maxPoints<-10
library(gstat)
library(geoR)
library(sp)
# "CoorX" X axis coordinates
# "CoorY" Y axis coordinates
# "Prop1" property
# "Modelo" can take values 1 (Exponential), 2 (Spherical) or 3 (Gaussian).
# "SillYNugget" Sill
# "Alcance" variogram model range
# "minPar" is the minimum number of points to do the estimation
# "maxPar" is the maximu number of points to do the estimation
# "Xmin" the minimum X value
# "Xmax" the maximum X value
# "Ymin" the minimum Y value
# "Ymax" the maximum Y value
# "TX" # width of the cells in the X direction for kriging estimation
# "TY" # width of the cells in the Y direction for kriging estimation
# "InvT" is the transformation made:0 for no transformation, 1 for "log", 2 for "square root", and 3 for "inverse" transformatio
# "NameX" is the name of the X axis
# "NameY" is the name of the Y axis
png("Results/EstimacionEspacial/Radar_mm_Log_Kriging.png", bg = "white")
Radar_mm_Log_OrdKrig <- KrigingOrd(CoorX = XCoord, CoorY = YCoord,
Prop1 = Radar_mm_Log, Modelo = Radar_mm_Log_vario_model, Nugget = Radar_mm_Log_nugget,
SillYNugget = Radar_mm_Log_sill_and_nugget, Alcance = Radar_mm_Log_rank,
minPar = minPoints, maxPar = maxPoints,
Xmin = XCoord_Stat[2,2], Xmax = XCoord_Stat[7,2],
Ymin = YCoord_Stat[2,2], Ymax = YCoord_Stat[7,2],
TX=DistMin, TY=DistMin, InvT=1, NameX="X (Km)",
NameY="Y (Km)", Titulo1="Kriging Radar_mm_Log (ppm)",
Titulo2="SD Radar_mm_Log (ppm)")
dev.off()
head(Radar_mm_Log_OrdKrig)
DistMin
source(file.choose()) # choose PlotGridCells.R
png("Results/EstimacionEspacial/Radar_mm_Log_Kriging_Est.png", bg = "white")
PlotGridCells(Z=Radar_mm_Log_OrdKrig[,3],
x=Radar_mm_Log_OrdKrig[,1:2],
PointsCoord = cbind(XCoord, YCoord),
grid = list(x = unique(Radar_mm_Log_OrdKrig[,1]),
y = unique(Radar_mm_Log_OrdKrig[,2])),
xlab = "X (Km)", ylab = "Y (Km)",
main = "Kriging Est Radar_mm_Log (ppm)")
dev.off()
png("Results/EstimacionEspacial/Radar_mm_Log_Kriging_SD.png", bg = "white")
PlotGridCells(Z=Radar_mm_Log_OrdKrig[,4],
x=Radar_mm_Log_OrdKrig[,1:2],
PointsCoord = cbind(XCoord, YCoord),
grid = list(x = unique(Radar_mm_Log_OrdKrig[,1]),
y = unique(Radar_mm_Log_OrdKrig[,2])),
xlab = "X (Km)", ylab = "Y (Km)",
main = "Kriging SD Radar_mm_Log (ppm)")
dev.off()
png("Results/EstimacionEspacial/Radar_mm_Log_KrigingAnis.png", bg = "white")
Pluv_mm_Log_OrdKrig <- KrigingOrdAnis(CoorX = XCoord, CoorY = YCoord,
Prop1 = Radar_mm_Log, Modelo = Radar_mm_Log_vario_model, Nugget = Radar_mm_Log_nugget,
SillYNugget = Radar_mm_Log_sill_and_nugget, Alcance = Radar_mm_Log_rank,
minPar = minPoints, maxPar = maxPoints,
malla = DistMin, InvT = 1, MaxAnis = 0, proporcion = 0.5,
NameX="X (Km)",
NameY="Y (Km)", Titulo1="Anisotropic Kriging Radar_mm_Log (ppm)",
Titulo2="SD Radar_mm_Log (ppm)")
dev.off()
Pluv_mm_Log_vario_model<- 2
Pluv_mm_Log_nugget<- 0.3
Pluv_mm_Log_sill_and_nugget<- 1.12
Pluv_mm_Log_rank <- 20000
png("Results/EstimacionEspacial/Pluv_mm_Log_Kriging.png", bg = "white")
Pluv_mm_Log_OrdKrig <- KrigingOrd(CoorX = XCoord, CoorY = YCoord,
Prop1 = Pluv_mm_Log, Modelo = Pluv_mm_Log_vario_model, Nugget = Pluv_mm_Log_nugget,
SillYNugget = Pluv_mm_Log_sill_and_nugget, Alcance = Pluv_mm_Log_rank,
minPar = minPoints, maxPar = maxPoints,
Xmin = XCoord_Stat[2,2], Xmax = XCoord_Stat[7,2],
Ymin = YCoord_Stat[2,2], Ymax = YCoord_Stat[7,2],
TX=DistMin, TY=DistMin, InvT=1, NameX="X (Km)",
NameY="Y (Km)", Titulo1="Kriging Pluv_mm_Log (ppm)",
Titulo2="SD Pluv_mm_Log (ppm)")
dev.off()
head(Pluv_mm_Log_OrdKrig)
X_rng<-XCoord_Stat[8,2]
Y_rng<-YCoord_Stat[8,2]
N_lags<-14
DistMin<-min(dist(Data_File[,1:2])) # Minimum distance in data
DistMax<-max(dist(Data_File[,1:2])) # Maximum distance in data
lag_value<-max((DistMax/2)/N_lags, DistMin)
png("Results/EstimacionEspacial/Radar_mm_Log_Pluv_mm_Log_CrossVario.png", bg = "white")
Radar_mm_Log_Pluv_mm_Log_CrossVario<-CrossVariograma(CoorX = XCoord, CoorY = YCoord,
P1 = Radar_mm_Log, P2 = Pluv_mm_Log,
NInt = N_lags, lags = lag_value,
Direccion = 0, Tol = 90,
NomP1 = 'Radar_mm_Log Variogram',
NomP2 = 'Pluv_mm_Log Variogram',
NomP1P2 = 'Radar_mm_Log-Pluv_mm_Log CrossVariogram')
dev.off()
Radar_mm_Log_vario_model<- 2 #modelo del variograma 1, exponencial, 2 esférico, 3 gaussiano
Radar_mm_Log_nugget<- 0.2
Radar_mm_Log_sill_and_nugget<- 0.86
Radar_mm_Log_rank <- 20000
# Pluv_mm_Log
Pluv_mm_Log_vario_model<- 2
Pluv_mm_Log_nugget<- 0.2
Pluv_mm_Log_sill_and_nugget<- 1.1
Pluv_mm_Log_rank <- 20000
# Cross-variogram
Radar_mm_Log_Pluv_mm_Log_vario_model<- 2 # spherical
Radar_mm_Log_Pluv_mm_Log_nugget<- 0.1
Radar_mm_Log_Pluv_mm_Log_sill_and_nugget<- .8
Radar_mm_Log_Pluv_mm_Log_rank <- 20000
png("Results/EstimacionEspacial/Radar_mm_Log_Pluv_mm_Log_CrossVarioModel.png", bg = "white")
ModelVariogram(XCoord, YCoord,
Radar_mm_Log, Pluv_mm_Log,
N_lags, lag_value, 0, 90,
Radar_mm_Log_Pluv_mm_Log_vario_model,
Radar_mm_Log_sill_and_nugget, Pluv_mm_Log_sill_and_nugget, Radar_mm_Log_Pluv_mm_Log_sill_and_nugget,
Radar_mm_Log_nugget, Pluv_mm_Log_nugget, Radar_mm_Log_Pluv_mm_Log_nugget, Radar_mm_Log_Pluv_mm_Log_rank,
'Radar_mm_Log Variogram', 'Pluv_mm_Log Variogram', 'Radar_mm_Log-Pluv_mm_Log CrossVariogram')
dev.off()
lag_value
X_rng<-XCoord_Stat[8,2]
Y_rng<-YCoord_Stat[8,2]
N_lags<-14
DistMin<-min(dist(Data_File[,1:2])) # Minimum distance in data
DistMax<-max(dist(Data_File[,1:2])) # Maximum distance in data
lag_value<-3000 #max((DistMax/2)/N_lags, DistMin)
png("Results/EstimacionEspacial/Radar_mm_Log_Pluv_mm_Log_CrossVario.png", bg = "white")
Radar_mm_Log_Pluv_mm_Log_CrossVario<-CrossVariograma(CoorX = XCoord, CoorY = YCoord,
P1 = Radar_mm_Log, P2 = Pluv_mm_Log,
NInt = N_lags, lags = lag_value,
Direccion = 0, Tol = 90,
NomP1 = 'Radar_mm_Log Variogram',
NomP2 = 'Pluv_mm_Log Variogram',
NomP1P2 = 'Radar_mm_Log-Pluv_mm_Log CrossVariogram')
dev.off()
# Radar_mm_Log
Radar_mm_Log_vario_model<- 2 #modelo del variograma 1 exponencial, 2 esférico, 3 gaussiano
Radar_mm_Log_nugget<- 0.2
Radar_mm_Log_sill_and_nugget<- 0.86
Radar_mm_Log_rank <- 20000
# Pluv_mm_Log
Pluv_mm_Log_vario_model<- 2lag
Pluv_mm_Log_nugget<- 0.2
Pluv_mm_Log_sill_and_nugget<- 1.1
Pluv_mm_Log_rank <- 20000
# Cross-variogram
Radar_mm_Log_Pluv_mm_Log_vario_model<- 2 # spherical
Radar_mm_Log_Pluv_mm_Log_nugget<- 0.1
Radar_mm_Log_Pluv_mm_Log_sill_and_nugget<- .8
Radar_mm_Log_Pluv_mm_Log_rank <- 20000
png("Results/EstimacionEspacial/Radar_mm_Log_Pluv_mm_Log_CrossVarioModel.png", bg = "white")
ModelVariogram(XCoord, YCoord,
Radar_mm_Log, Pluv_mm_Log,
N_lags, lag_value, 0, 90,
Radar_mm_Log_Pluv_mm_Log_vario_model,
Radar_mm_Log_sill_and_nugget, Pluv_mm_Log_sill_and_nugget, Radar_mm_Log_Pluv_mm_Log_sill_and_nugget,
Radar_mm_Log_nugget, Pluv_mm_Log_nugget, Radar_mm_Log_Pluv_mm_Log_nugget, Radar_mm_Log_Pluv_mm_Log_rank,
'Radar_mm_Log Variogram', 'Pluv_mm_Log Variogram', 'Radar_mm_Log-Pluv_mm_Log CrossVariogram')
dev.off()
X_rng<-XCoord_Stat[8,2]
Y_rng<-YCoord_Stat[8,2]
N_lags<-14
DistMin<-min(dist(Data_File[,1:2])) # Minimum distance in data
DistMax<-max(dist(Data_File[,1:2])) # Maximum distance in data
lag_value<-3000 #max((DistMax/2)/N_lags, DistMin)
png("Results/EstimacionEspacial/Radar_mm_Log_Pluv_mm_Log_CrossVario.png", bg = "white")
Radar_mm_Log_Pluv_mm_Log_CrossVario<-CrossVariograma(CoorX = XCoord, CoorY = YCoord,
P1 = Radar_mm_Log, P2 = Pluv_mm_Log,
NInt = N_lags, lags = lag_value,
Direccion = 0, Tol = 90,
NomP1 = 'Radar_mm_Log Variogram',
NomP2 = 'Pluv_mm_Log Variogram',
NomP1P2 = 'Radar_mm_Log-Pluv_mm_Log CrossVariogram')
dev.off()
# Radar_mm_Log
Radar_mm_Log_vario_model<- 2 #modelo del variograma 1 exponencial, 2 esférico, 3 gaussiano
Radar_mm_Log_nugget<- 0.2
Radar_mm_Log_sill_and_nugget<- 0.86
Radar_mm_Log_rank <- 20000
# Pluv_mm_Log
Pluv_mm_Log_vario_model<- 2
Pluv_mm_Log_nugget<- 0.2
Pluv_mm_Log_sill_and_nugget<- 1.1
Pluv_mm_Log_rank <- 20000
# Cross-variogram
Radar_mm_Log_Pluv_mm_Log_vario_model<- 2 # spherical
Radar_mm_Log_Pluv_mm_Log_nugget<- 0.1
Radar_mm_Log_Pluv_mm_Log_sill_and_nugget<- .8
Radar_mm_Log_Pluv_mm_Log_rank <- 20000
png("Results/EstimacionEspacial/Radar_mm_Log_Pluv_mm_Log_CrossVarioModel.png", bg = "white")
ModelVariogram(XCoord, YCoord,
Radar_mm_Log, Pluv_mm_Log,
N_lags, lag_value, 0, 90,
Radar_mm_Log_Pluv_mm_Log_vario_model,
Radar_mm_Log_sill_and_nugget, Pluv_mm_Log_sill_and_nugget, Radar_mm_Log_Pluv_mm_Log_sill_and_nugget,
Radar_mm_Log_nugget, Pluv_mm_Log_nugget, Radar_mm_Log_Pluv_mm_Log_nugget, Radar_mm_Log_Pluv_mm_Log_rank,
'Radar_mm_Log Variogram', 'Pluv_mm_Log Variogram', 'Radar_mm_Log-Pluv_mm_Log CrossVariogram')
dev.off()
# Verificar que se cumple que el modelo es positivo definido!!!!, revisar diapositiva num 13
NugetMatrix <- matrix(c(Pluv_mm_Log_nugget,
Radar_mm_Log_Pluv_mm_Log_nugget,
Radar_mm_Log_Pluv_mm_Log_nugget,
Radar_mm_Log_nugget), ncol = 2)
det(NugetMatrix)
SemiVariMatrix1 <- c(Pluv_mm_Log_sill_and_nugget,
Radar_mm_Log_Pluv_mm_Log_sill_and_nugget,
Radar_mm_Log_Pluv_mm_Log_sill_and_nugget,
Radar_mm_Log_sill_and_nugget)
SillMatrix <- matrix(SemiVariMatrix1, ncol = 2)
SillMatrix <- matrix(SemiVariMatrix1, ncol = 2)
Sill_NuggetMatrix <- SillMatrix - NugetMatrix
Sill_NuggetMatrix
which(Sill_NuggetMatrix < 0) # which(Model2 < 0, arr.ind = T)
det(Sill_NuggetMatrix)
png("Results/EstimacionEspacial/Radar_mm_Log_Pluv_mm_Log_CrossValidation.png", bg = "white")
Pluv_mm_Log_CrossValid2<- CrossValidation2(XCoord, YCoord,
Pluv_mm_Log, Radar_mm_Log,
N_lags, lag_value, Radar_mm_Log_Pluv_mm_Log_vario_model,
Pluv_mm_Log_sill_and_nugget, Radar_mm_Log_sill_and_nugget, Radar_mm_Log_Pluv_mm_Log_sill_and_nugget,
Pluv_mm_Log_nugget, Radar_mm_Log_nugget, Radar_mm_Log_Pluv_mm_Log_nugget, Radar_mm_Log_Pluv_mm_Log_rank)
dev.off()
head(Pluv_mm_Log_CrossValid2)
Pluv_mm_Log_CrossValid2_Sta <- Val_Estadisticos(Pluv_mm_Log_CrossValid2[,c(3,4,5)])
# Histogram and Boxplot 1
png("Results/EstimacionEspacial/Pluv_mm_Log-Pluv_mm_Log+_HistBoxPlot1CoKrig.png", bg = "white")
HistBoxplot(x=Pluv_mm_Log_CrossValid2[,5], mean = Pluv_mm_Log_CrossValid2_Sta[5,3], median = Pluv_mm_Log_CrossValid2_Sta[4,3], main ="",
xlab = "Pluv_mm_Log-Pluv_mm_Log* (ppm)", ylab = "Frecuencia Absoluta (conteo)", AbsFreq = TRUE, PercentFreq = FALSE )
dev.off()
png("Results/AnalisisEstructural/Pluv_mm_Log_CoKrigingCrossValid_Spatial_Distr.png", bg = "white")
DEspacial(Pluv_mm_Log_CrossValid2[,1], Pluv_mm_Log_CrossValid2[,2], Pluv_mm_Log_CrossValid2[,5],
'X (Km)', 'Y (Km)', 'Pluv_mm_Log-Pluv_mm_Log* (ppm)', 'Pluv_mm_Log - Pluv_mm_Log*')
dev.off()
png("Results/EstimacionEspacial/Radar_mm_Log_CoKrig.png", bg = "white")
Radar_mm_Log_CoKrig <- CoKrigingOrd(XCoord, YCoord,
Pluv_mm_Log, Radar_mm_Log,
Radar_mm_Log_Pluv_mm_Log_vario_model,
Pluv_mm_Log_sill_and_nugget, Radar_mm_Log_sill_and_nugget, Radar_mm_Log_Pluv_mm_Log_sill_and_nugget,
Pluv_mm_Log_nugget, Radar_mm_Log_nugget,
Radar_mm_Log_Pluv_mm_Log_nugget, Radar_mm_Log_Pluv_mm_Log_rank,
minPar = minPoints, maxPar = maxPoints,
Xmin = XCoord_Stat[2,2], Xmax = XCoord_Stat[7,2],
Ymin = YCoord_Stat[2,2], Ymax = YCoord_Stat[7,2],
TX=DistMin, TY=DistMin, InvT=1, NameX="X (Km)",
NameY="Y (Km)", Titulo1="CoKriging Pluv_mm_Log (ppm)",
Titulo2="SD Pluv_mm_Log (ppm)")
dev.off()
